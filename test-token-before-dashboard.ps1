# Script PowerShell pour tester le stockage du token avant dashboard
Write-Host "üîß Test du stockage du token avant acc√®s au dashboard..." -ForegroundColor Green

# Arr√™ter le frontend s'il tourne
Write-Host "üõë Arr√™t du frontend en cours..." -ForegroundColor Yellow
try {
    $nodeProcess = Get-NetTCPConnection -LocalPort 5173 -ErrorAction SilentlyContinue | 
                   Where-Object { $_.State -eq "Listen" } | 
                   ForEach-Object { Get-Process -Id $_.OwningProcess -ErrorAction SilentlyContinue } |
                   Where-Object { $_.ProcessName -eq "node" }
    
    if ($nodeProcess) {
        Write-Host "‚úÖ Processus Node.js trouv√©, arr√™t en cours..." -ForegroundColor Green
        Stop-Process -Id $nodeProcess.Id -Force
        Start-Sleep -Seconds 3
        Write-Host "‚úÖ Frontend arr√™t√©" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è  Aucun processus frontend trouv√©" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ö†Ô∏è  Erreur lors de l'arr√™t du frontend: $($_.Exception.Message)" -ForegroundColor Yellow
}

# Aller dans le r√©pertoire frontend
if (Test-Path "frontend") {
    Set-Location "frontend"
    Write-Host "üìÅ R√©pertoire frontend trouv√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå R√©pertoire frontend non trouv√©" -ForegroundColor Red
    exit 1
}

# V√©rifier si Node.js est install√©
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js d√©tect√©: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js n'est pas install√©" -ForegroundColor Red
    exit 1
}

# V√©rifier si npm est install√©
try {
    $npmVersion = npm --version
    Write-Host "‚úÖ npm d√©tect√©: $npmVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå npm n'est pas install√©" -ForegroundColor Red
    exit 1
}

# Installer les d√©pendances si n√©cessaire
if (-not (Test-Path "node_modules")) {
    Write-Host "üì¶ Installation des d√©pendances..." -ForegroundColor Yellow
    try {
        npm install
        Write-Host "‚úÖ D√©pendances install√©es avec succ√®s" -ForegroundColor Green
    } catch {
        Write-Host "‚ùå Erreur lors de l'installation des d√©pendances" -ForegroundColor Red
        exit 1
    }
} else {
    Write-Host "‚úÖ D√©pendances d√©j√† install√©es" -ForegroundColor Green
}

# V√©rifier que les corrections ont √©t√© appliqu√©es
Write-Host "üîç V√©rification des corrections..." -ForegroundColor Yellow

$correctedFiles = @(
    "src/context/AuthContext.tsx",
    "src/pages/Login.tsx"
)

foreach ($file in $correctedFiles) {
    if (Test-Path $file) {
        $content = Get-Content $file -Raw
        if ($file -eq "src/pages/Login.tsx" -and $content -match "V√©rification du stockage avant redirection") {
            Write-Host "‚úÖ $file - V√©rification avant redirection ajout√©e" -ForegroundColor Green
        } elseif ($file -eq "src/context/AuthContext.tsx" -and $content -match "V√©rification finale r√©ussie") {
            Write-Host "‚úÖ $file - V√©rification finale ajout√©e" -ForegroundColor Green
        } else {
            Write-Host "‚ö†Ô∏è  $file - Corrections √† v√©rifier" -ForegroundColor Yellow
        }
    } else {
        Write-Host "‚ùå $file manquant" -ForegroundColor Red
    }
}

# D√©marrer le serveur de d√©veloppement
Write-Host "üöÄ D√©marrage du serveur de d√©veloppement..." -ForegroundColor Yellow
Write-Host ""
Write-Host "üîß Corrections appliqu√©es:" -ForegroundColor Cyan
Write-Host "   - V√©rification du stockage avant redirection vers dashboard" -ForegroundColor Cyan
Write-Host "   - V√©rification finale dans AuthContext" -ForegroundColor Cyan
Write-Host "   - Logs d√©taill√©s pour le debugging" -ForegroundColor Cyan
Write-Host "   - Gestion d'erreur si stockage √©choue" -ForegroundColor Cyan
Write-Host ""
Write-Host "üìã Instructions de test:" -ForegroundColor Green
Write-Host "   1. Ouvrez http://localhost:5173 dans votre navigateur" -ForegroundColor White
Write-Host "   2. Ouvrez la console du navigateur (F12)" -ForegroundColor White
Write-Host "   3. Connectez-vous avec vos identifiants" -ForegroundColor White
Write-Host "   4. Surveillez les logs de v√©rification" -ForegroundColor White
Write-Host "   5. V√©rifiez que vous arrivez sur le dashboard" -ForegroundColor White
Write-Host ""
Write-Host "üîç Logs √† surveiller:" -ForegroundColor Yellow
Write-Host "   - 'üîê D√©but de la tentative de connexion...'" -ForegroundColor Gray
Write-Host "   - 'üìã R√©sultat de la connexion: ...'" -ForegroundColor Gray
Write-Host "   - 'üîç V√©rification du stockage avant redirection:'" -ForegroundColor Gray
Write-Host "   - '‚úÖ Token et donn√©es stock√©s, redirection vers le dashboard'" -ForegroundColor Gray
Write-Host "   - '‚úÖ V√©rification finale r√©ussie - Session compl√®tement √©tablie'" -ForegroundColor Gray
Write-Host ""
Write-Host "üîß Commandes de debugging dans la console:" -ForegroundColor Cyan
Write-Host "   // V√©rifier le localStorage apr√®s connexion" -ForegroundColor Gray
Write-Host "   console.log('Token:', localStorage.getItem('authToken'));" -ForegroundColor Gray
Write-Host "   console.log('Donn√©es:', localStorage.getItem('doctorData'));" -ForegroundColor Gray
Write-Host ""
Write-Host "   // V√©rifier l'URL actuelle" -ForegroundColor Gray
Write-Host "   console.log('URL actuelle:', window.location.pathname);" -ForegroundColor Gray
Write-Host ""
Write-Host "üì± Frontend accessible sur: http://localhost:5173" -ForegroundColor Green
Write-Host "üîÑ Appuyez sur Ctrl+C pour arr√™ter le serveur" -ForegroundColor Gray

try {
    npm run dev
} catch {
    Write-Host "‚ùå Erreur lors du d√©marrage du serveur de d√©veloppement" -ForegroundColor Red
    exit 1
} 