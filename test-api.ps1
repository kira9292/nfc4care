# Script de test pour l'API NFC4Care
Write-Host "üß™ Test de l'API NFC4Care" -ForegroundColor Green
Write-Host "=========================" -ForegroundColor Green
Write-Host ""

# Test 1: V√©rifier que le backend r√©pond
Write-Host "üîç Test 1: V√©rification du backend..." -ForegroundColor Yellow
try {
    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/auth/login" -Method POST -Body '{"email":"test","password":"test"}' -ContentType "application/json" -TimeoutSec 10
    Write-Host "‚úÖ Backend r√©pond correctement" -ForegroundColor Green
} catch {
    if ($_.Exception.Message -like "*401*" -or $_.Exception.Message -like "*400*") {
        Write-Host "‚úÖ Backend r√©pond (erreur attendue pour test)" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erreur backend: $($_.Exception.Message)" -ForegroundColor Red
        Write-Host "üí° Assurez-vous que le backend est d√©marr√© avec: .\start-backend-docker.ps1" -ForegroundColor Yellow
        exit 1
    }
}

# Test 2: Test de connexion avec les identifiants de test
Write-Host ""
Write-Host "üîç Test 2: Test de connexion..." -ForegroundColor Yellow
try {
    $loginData = @{
        email = "doctor@example.com"
        password = "password"
    } | ConvertTo-Json

    $response = Invoke-RestMethod -Uri "http://localhost:8080/api/auth/login" -Method POST -Body $loginData -ContentType "application/json" -TimeoutSec 10
    
    if ($response.token) {
        Write-Host "‚úÖ Connexion r√©ussie" -ForegroundColor Green
        Write-Host "   Token re√ßu: $($response.token.Substring(0, 20))..." -ForegroundColor Cyan
        Write-Host "   Utilisateur: $($response.prenom) $($response.nom)" -ForegroundColor Cyan
        
        $token = $response.token
        
        # Test 3: Test d'acc√®s √† une route prot√©g√©e
        Write-Host ""
        Write-Host "üîç Test 3: Test d'acc√®s √† une route prot√©g√©e..." -ForegroundColor Yellow
        try {
            $headers = @{
                "Authorization" = "Bearer $token"
                "Content-Type" = "application/json"
            }
            
            $dashboardResponse = Invoke-RestMethod -Uri "http://localhost:8080/api/dashboard/stats" -Method GET -Headers $headers -TimeoutSec 10
            Write-Host "‚úÖ Acc√®s au dashboard r√©ussi" -ForegroundColor Green
        } catch {
            Write-Host "‚ùå Erreur d'acc√®s au dashboard: $($_.Exception.Message)" -ForegroundColor Red
        }
        
    } else {
        Write-Host "‚ùå Connexion √©chou√©e: pas de token re√ßu" -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå Erreur de connexion: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "üí° V√©rifiez que les identifiants sont corrects" -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üéâ Tests termin√©s!" -ForegroundColor Green
Write-Host "Si tous les tests sont verts, l'API fonctionne correctement." -ForegroundColor Cyan 