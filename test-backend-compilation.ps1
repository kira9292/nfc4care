# Script pour tester la compilation du backend avec le nouveau PatientDTO
Write-Host "üîç Test de compilation du backend..." -ForegroundColor Cyan

# V√©rifier que nous sommes dans le bon r√©pertoire
Write-Host "`nüìÅ V√©rification du r√©pertoire..." -ForegroundColor Blue
if (Test-Path "backend/pom.xml") {
    Write-Host "‚úÖ Fichier pom.xml trouv√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Fichier pom.xml non trouv√©. Assurez-vous d'√™tre dans le r√©pertoire racine du projet." -ForegroundColor Red
    exit 1
}

# Nettoyer et compiler le projet
Write-Host "`nüßπ Nettoyage du projet..." -ForegroundColor Yellow
Set-Location "backend"
try {
    mvn clean
    Write-Host "‚úÖ Nettoyage r√©ussi" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur lors du nettoyage: $($_.Exception.Message)" -ForegroundColor Red
    exit 1
}

Write-Host "`nüî® Compilation du projet..." -ForegroundColor Yellow
try {
    mvn compile
    Write-Host "‚úÖ Compilation r√©ussie" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur de compilation: $($_.Exception.Message)" -ForegroundColor Red
    Write-Host "`nüîç V√©rification des fichiers cr√©√©s:" -ForegroundColor Blue
    Write-Host "  - DashboardController.java: $(Test-Path 'src/main/java/com/nfc4care/controller/DashboardController.java')" -ForegroundColor Gray
    Write-Host "  - DashboardService.java: $(Test-Path 'src/main/java/com/nfc4care/service/DashboardService.java')" -ForegroundColor Gray
    Write-Host "  - DashboardStatsDTO.java: $(Test-Path 'src/main/java/com/nfc4care/dto/DashboardStatsDTO.java')" -ForegroundColor Gray
    Write-Host "  - PatientDTO.java: $(Test-Path 'src/main/java/com/nfc4care/dto/PatientDTO.java')" -ForegroundColor Gray
    exit 1
}

# V√©rifier que tous les fichiers n√©cessaires existent
Write-Host "`nüìã V√©rification des fichiers cr√©√©s..." -ForegroundColor Blue
$files = @(
    "src/main/java/com/nfc4care/controller/DashboardController.java",
    "src/main/java/com/nfc4care/service/DashboardService.java",
    "src/main/java/com/nfc4care/dto/DashboardStatsDTO.java",
    "src/main/java/com/nfc4care/dto/PatientDTO.java"
)

foreach ($file in $files) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file manquant" -ForegroundColor Red
    }
}

Write-Host "`nüöÄ D√©marrage du backend..." -ForegroundColor Green
try {
    Start-Process -FilePath "mvn" -ArgumentList "spring-boot:run" -NoNewWindow
    Write-Host "‚úÖ Backend d√©marr√©" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur lors du d√©marrage: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n‚è≥ Attente du d√©marrage..." -ForegroundColor Yellow
Start-Sleep -Seconds 30

# Test des endpoints
Write-Host "`nüîç Test des endpoints dashboard..." -ForegroundColor Blue

try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/api/dashboard/stats" -Method GET -TimeoutSec 10
    Write-Host "‚úÖ Endpoint /api/dashboard/stats accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur sur /api/dashboard/stats: $($_.Exception.Message)" -ForegroundColor Red
}

try {
    $response = Invoke-WebRequest -Uri "http://localhost:8080/api/dashboard/recent-patients" -Method GET -TimeoutSec 10
    Write-Host "‚úÖ Endpoint /api/dashboard/recent-patients accessible" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erreur sur /api/dashboard/recent-patients: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`n‚úÖ Test de compilation termin√©!" -ForegroundColor Green 